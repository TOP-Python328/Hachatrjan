# ИСПОЛЬЗОВАТЬ: оформление кода согласно PEP 8 — в качестве образца можно использовать код из репозитория _scripts

# ПЕРЕИМЕНОВАТЬ: имена letter и number вводят в заблуждение — используйте square1 и square2
letter, number = input(), input()
# ПЕРЕИМЕНОВАТЬ: что по-вашему означает sub? в строке содержатся символы цифр, ну так это и пишите — digits
alph, sub = 'abcdefgh', '12345678'

# ИСПРАВИТЬ: второй символ является цифрой, а значит можно его сразу преобразовать в int — такая операция будет выполнена заметно быстрее, чем индексная операция со строкой
x1, y1 = alph.index(letter[0]), sub.index(letter[1])
# ОТВЕТИТЬ: что делает метод index()?
x2, y2 = alph.index(number[0]), sub.index(number[1])
# КОММЕНТАРИЙ: у вас хороший рабочий вариант, но просто напомню, что для любого символа можно получить его код (число) в таблице UTF-8 с помощью функции ord() — и это быстрее и компактнее, чем вычисления индексов

# ОТВЕТИТЬ: что делает данное логическое выражение и как именно оно позволяет ответить на вопрос задачи?
if (x1 + y1 + x2 + y2) % 2 == 0:
    print('да')
else:
    print('нет')


# a1
# b1
# нет

# ДОБАВИТЬ: тесты с другими входными данными


# возможен ли вариант с использованием словарей? нет полного представления, только внутренний намек
# КОММЕНТАРИЙ: задача, конечно, может быть решена с помощью словаря, однако, существуют ещё минимум три простых решения

# врать не буду, совершенно ничего не приходило в голову
# смотрела в интернете, но там лишь варианты без букв. Вариант с использованием поиска значения мне показался самым понятным...
# КОММЕНТАРИЙ: одно из трёх упомянутых выше решений — с помощью метода последовательностей index(), верно
# КОММЕНТАРИЙ: нет ничего зазорного в том, чтобы смотреть готовые решения — все так учатся
# СДЕЛАТЬ: тем не менее, в каждом готовом решении категорически необходимо разобраться, целиком и полностью понять его алгоритм и использованные средства языка — именно поэтому вы развёрнуто ответите мне на вопросы выше и тогда получите полный балл


# ИТОГ: жду ответы — 3/6


# СДЕЛАТЬ: следите за пробелами и отступами в коде! если откуда-то копируете код, то возьмите на себя труд привести его к общепринятому оформлению

# КОММЕНТАРИЙ: этот ресурс поможет вам лучше придумывать имена переменным: https://context.reverso.net/перевод/русский-английский
